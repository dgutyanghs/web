<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Donnie&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on Donnie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Jan 2022 14:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started</title>
      <link>/docs/getting-started/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/</guid>
      <description>&lt;p&gt;Welcome to the Mainroad theme documentation. This quick start guide covers Mainroad theme installation and minimal
configuration and is intended for intermediate to advanced users. To understand this guide, you need to be familiar
with the &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; static site generator.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Customization</title>
      <link>/docs/customization/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>/docs/customization/</guid>
      <description>&lt;p&gt;Customization page describes common Mainroad configuration parameters which can be specified via configuration file or
via Front Matter section. That includes logo section tuning, adding a sidebar with widgets, adjusting highlight color,
and more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Frequently asked questions (FAQ)</title>
      <link>/docs/faq/</link>
      <pubDate>Mon, 24 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>/docs/faq/</guid>
      <description>&lt;p&gt;Browse this FAQ page to find answers to frequently asked questions that have not been covered elsewhere
in the documentation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Tue, 25 Jan 2022 14:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Our website builds with Hugo static site generator and Mainroad theme. This demo allows you to see what Mainroad based website looks like before deciding to go with it. Just keep in mind that the current demo shows the basics, a small part of what the combination of Hugo and Mainroad can do.
About Mainroad Mainroad is a responsive, simple, clean and content-focused Hugo theme based on the MH Magazine lite WordPress theme.</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>/post/basic-elements/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/basic-elements/</guid>
      <description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tech</title>
      <link>/post/my-first-post/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-post/</guid>
      <description>Introduction This is bold text, and this is emphasized text.
Visit the Hugo website!</description>
    </item>
    
    <item>
      <title>wireguard</title>
      <link>/post/wireguard/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/wireguard/</guid>
      <description>WireGuard WireGuard 是一种新的开源 VPN 协议，它有很多优点，例如：
• 易于部署：配置和部署 WireGuard 就像配置和使用 SSH 一样容易，只需要在两端交换公钥，设置防火墙规则并启动服务.
• 高速性能：WireGuard 运行在内核空间，利用了最新的加密技术，可以提供高速且安全的网络连接.
• 低攻击面：WireGuard 有一个仅 4000 行代码的精简代码库，相比 OpenVPN 的 100,000 行代码，更容易调试和审计.
• IP 无关：WireGuard 使用公钥而不是 IP 端口五元组来标识 Peer，这意味着隧道是 IP 无关的，可以支持地址漫游和动态 IP 变化.
• 对等模式：WireGuard 节点是完全对等的，没有 Server 和 Client 的概念，适合各种组网拓扑.
哪些VPN使用了WireGuard NordVPN Surfshark StrongVPN IVPN Mullvad VyprVPN OVPN AzireVPN VPN.ac TorGuard Private Internet Access CyberGhost WireGuard可用来内网穿透 </description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugo-template-primer/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>
